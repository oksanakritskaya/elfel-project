{"version":3,"sources":["src/javascripts/form.ts"],"names":[],"mappings":"AAIA,IAAK,MAGJ;AAHD,WAAK,MAAM;IACP,qBAAW,CAAA;IACX,uBAAa,CAAA;AACjB,CAAC,EAHI,MAAM,KAAN,MAAM,QAGV;AAED,SAAS,GAAG,CAAI,GAAW,EAAE,MAAc,EAAE,IAAU;IACnD,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM;QACxC,IAAI,MAAM,GAAgB;YACtB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;SACJ,CAAC;QACF,IAAI,IAAI,EAAE;YACN,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;QACD,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC;aACb,IAAI,CAAC,UAAA,QAAQ;YACV,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;gBACd,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAA/B,CAA+B,CAAC,CAAC;aACjE;iBAAM;gBACH,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;aAC5B;QACL,CAAC,CAAC,CACD,OAAK,CAAA,CAAC,UAAC,KAAK,IAAK,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAA;IACnD,CAAC,CAAC,CAAC;AACP,CAAC;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC1C,IAAM,IAAI,GAAoB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,KAAK;QAC3C,IAAM,IAAI,GAAuC,IAAI,CAAC,QAAQ,CAAC;QAC/D,IAAM,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC;QACrC,IAAM,KAAK,GAAuC,IAAI,CAAC,OAAO,CAAC;QAC/D,IAAM,QAAQ,GAAW,KAAK,CAAC,KAAK,CAAC;QACrC,IAAM,MAAM,GAAqB,IAAI,CAAC,UAAU,CAAC;QACjD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;QAEvC,GAAG,CAAc,UAAU,EAAE,MAAM,CAAC,IAAI,EAAE,EAAC,IAAI,EAAK,SAAS,SAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAG,EAAC,CAAC;aAC3F,IAAI,CAAC,UAAC,IAAiB;YACpB,MAAM,CAAC,SAAS,GAAM,IAAI,CAAC,OAAO,2FAAkB,CAAC;QACzD,CAAC,CAAC,CACD,OAAK,CAAA,CAAC,UAAC,KAAY;YAChB,MAAM,CAAC,SAAS,GAAM,KAAK,CAAC,OAAO,gPAA+C,CAAC;QACvF,CAAC,CAAC,CACD,SAAO,CAAA,CAAC;YACL,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAA;YAC1C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzC,CAAC,CAAC,CAAA;QAEN,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["interface SmsResponse {\r\n    message: string;\r\n}\r\n\r\nenum Method {\r\n    GET = 'GET',\r\n    POST = 'POST'\r\n}\r\n\r\nfunction api<T>(url: string, method: Method, body?: any): Promise<T> {\r\n    return new Promise(function (resolve, reject) {\r\n        let params: RequestInit = {\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        if (body) {\r\n            params.body = JSON.stringify(body);\r\n        }\r\n        fetch(url, params)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    response.json().then(text => reject(new Error(text.message)));\r\n                } else {\r\n                    resolve(response.json());\r\n                }\r\n            })\r\n            .catch((error) => reject(new Error(error)))\r\n    });\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const form: HTMLFormElement = document.forms[0];\r\n\r\n    form.addEventListener('submit', function (event) {\r\n        const smth: HTMLInputElement = <HTMLInputElement>form.userName;\r\n        const inputName: string = smth.value;\r\n        const smth2: HTMLInputElement = <HTMLInputElement>form.userTel;\r\n        const inputTel: string = smth2.value;\r\n        const button = <HTMLInputElement>form.buttonSend;\r\n        button.classList.add('button--sending')\r\n\r\n        api<SmsResponse>('/message', Method.POST, {text: `${inputName} ${inputTel.replace(/\\s/g, '')}`})\r\n            .then((data: SmsResponse) => {\r\n                button.innerText = `${data.message} Ожидайте звонка`;\r\n            })\r\n            .catch((error: Error) => {\r\n                button.innerText = `${error.message}. Пожалуйста, свяжитесь с нами самостоятельно`;\r\n            })\r\n            .finally(() => {\r\n                button.classList.remove('button--sending')\r\n                button.classList.add('button--sent');\r\n            })\r\n\r\n        event.preventDefault();\r\n    });\r\n});\r\n\r\n"]}